name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter (if configured)
      run: npm run lint || echo "No lint script found"
      continue-on-error: true

    - name: Run tests
      run: npm test -- --run

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Check for vulnerabilities
      run: |
        AUDIT_RESULT=$(npm audit --audit-level=high --json | jq '.metadata.vulnerabilities | to_entries[] | select(.value > 0)')
        if [ -n "$AUDIT_RESULT" ]; then
          echo "High or critical vulnerabilities found!"
          npm audit
          exit 1
        else
          echo "No high or critical vulnerabilities found"
        fi

  build-quality:
    name: Build Quality Check
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Check bundle size
      run: |
        echo "Checking bundle sizes..."
        du -sh dist/
        find dist/ -name "*.js" -o -name "*.css" | while read file; do
          size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file")
          echo "$file: $size bytes"
        done

    - name: Verify dist structure
      run: |
        if [ ! -f "dist/index.html" ]; then
          echo "Error: index.html not found in dist/"
          exit 1
        fi
        echo "âœ… Build structure verified"
